{"version":3,"sources":["Header.js","SVG/EmailSVG.js","forms/FormEmailField.js","SVG/LockSVG.js","SVG/EyeClosedSVG.js","SVG/EyeOpenSVG.js","forms/EyeSVGController.js","forms/FormPasswordField.js","forms/LoginFormSubmitButton.js","forms/FormEmailErrorMessage.js","forms/FormPasswordErrorMessage.js","forms/FormSubmitErrorMessage.js","database/database.js","forms/inputValidation.js","forms/LoginForm.js","SVG/UsernameSVG.js","forms/FormUsernameField.js","forms/SignUpFormSubmitButton.js","forms/FormUsernameErrorMessage.js","forms/SignUpForm.js","forms/LoginFormSelectButton.js","forms/SignUpFormSelectButton.js","forms/FormBody.js","Body.js","reportWebVitals.js","index.js"],"names":["Header","props","loggedOutHeader","id","className","loggedInHeader","this","username","loggedIn","React","Component","EmailSVG","xmlns","style","backgroundColor","fill","x","y","width","height","viewBox","d","FormEmailField","display","justifyContent","alignItems","type","name","placeholder","value","onChange","LockSVG","EyeClosedSVG","onClick","EyeOpenSVG","EyeSVGController","passwordVisible","FormPasswordField","state","handleClick","bind","event","setState","prevState","passwordFieldInputType","LoginFormSubmitButton","form","FormEmailErrorMessage","inputError","formType","FormPasswordErrorMessage","FormSubmitErrorMessage","database","users","email","password","inputValidation","checkIfEmailIsValidAndPrintError","userEmailInput","test","checkIfUsernameIsValidAndPrintError","usernameInput","checkIfPasswordIsValidAndPrintError","userPasswordInput","validateInputUpdateErrorAndReturnIfValid","inputValue","inputField","formInstance","isInputValid","userEmailInputError","userPasswordInputError","usernameInputError","validateAllInputsUpdateErrorsAndReturnIfSubmitValid","isSubmitValid","undefined","userEmail","userPassword","isSignUpEmailUnique","map","item","doLoginEmailAndPasswordMatchDatabase","isThereMatchInDatabase","checkEmailAndPasswordAgainstDatabaseUpdateSubmitErrorAndReturnIfMatch","doEmailAndPasswordMatchDatabase","console","log","submitError","checkEmailAgainstDatabaseUpdateSubmitErrorAndReturnIfUnique","push","returnUsernameFromEmailAndPassword","LoginForm","handleChange","handleSubmit","target","preventDefault","didSubmitSucceed","setFormShakeState","logIn","showHide","method","action","onSubmit","UsernameSVG","FormUsernameField","SignUpFormSubmitButton","FormUsernameErrorMessage","SignUpForm","LoginFormSelectButton","data-is-form-selected","isFormSelected","SignUpFormSelectButton","FormBody","formName","formShake","handleFormSelectButtonClick","currentTarget","setTimeout","data-shake","Body","formBody","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","App","logOut","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.52e56e00.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass Header extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n    render(){\r\n\r\n        let loggedOutHeader = \r\n            <div id= 'headerContainer' className='headerText'>\r\n                Login or Sign Up To Continue!\r\n            </div>;\r\n\r\n        let loggedInHeader = \r\n            <div id= 'headerContainer' className='headerText'>\r\n                Welcome, {this.props.username}!\r\n            </div>;\r\n\r\n        return (\r\n            (!this.props.loggedIn) ? loggedOutHeader : loggedInHeader\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","function EmailSVG(props){\r\n    return (\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" \r\n        style={{ backgroundColor: props.backgroundColor, fill: 'black', x: '0px', y: '0px', width: '18px', height: '18px'}}\r\n        viewBox=\"0 0 24 24\">\r\n            <path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M20 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm0 4l-8 5-8-5V6l8 5 8-5v2z\"/>\r\n        </svg>\r\n\r\n    );\r\n}\r\n\r\nexport default EmailSVG;","import React from 'react';\r\nimport EmailSVG from '../SVG/EmailSVG.js';\r\n\r\n\r\nclass FormEmailField extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n    render(){\r\n        return(\r\n            <div className='formInputElement' style={{display:'flex'}}>\r\n                <div style={{backgroundColor:'white', width:'40px', display:'flex', justifyContent:'center', alignItems:'center'}}>\r\n                    <EmailSVG backgroundColor='white'/>\r\n                </div>\r\n\r\n                <input type='text' id='formEmailInput' name='userEmail' placeholder='Email' value={this.props.value} onChange={this.props.onChange}>\r\n                </input>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FormEmailField;","function LockSVG(props){\r\n    return (\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" \r\n        style={{ backgroundColor: props.backgroundColor, fill: 'black', x: '0px', y: '0px', width: '20px', height: '20px'}}\r\n        viewBox=\"0 0 24 24\">\r\n            <path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M18 8h-1V6c0-2.76-2.24-5-5-5S7 3.24 7 6v2H6c-1.1 0-2 .9-2 2v10c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V10c0-1.1-.9-2-2-2zm-6 9c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2zm3.1-9H8.9V6c0-1.71 1.39-3.1 3.1-3.1 1.71 0 3.1 1.39 3.1 3.1v2z\"/>\r\n        </svg>\r\n\r\n    );\r\n}\r\n\r\nexport default LockSVG;","function EyeClosedSVG(props){\r\n    return (\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" onClick={props.onClick}\r\n        style={{ backgroundColor: props.backgroundColor, fill: 'black', x: '0px', y: '0px', width: '18px', height: '18px'}}\r\n        viewBox=\"0 0 24 24\">\r\n            <path d=\"M0 0h24v24H0zm0 0h24v24H0zm0 0h24v24H0zm0 0h24v24H0z\" fill=\"none\"/><path d=\"M12 7c2.76 0 5 2.24 5 5 0 .65-.13 1.26-.36 1.83l2.92 2.92c1.51-1.26 2.7-2.89 3.43-4.75-1.73-4.39-6-7.5-11-7.5-1.4 0-2.74.25-3.98.7l2.16 2.16C10.74 7.13 11.35 7 12 7zM2 4.27l2.28 2.28.46.46C3.08 8.3 1.78 10.02 1 12c1.73 4.39 6 7.5 11 7.5 1.55 0 3.03-.3 4.38-.84l.42.42L19.73 22 21 20.73 3.27 3 2 4.27zM7.53 9.8l1.55 1.55c-.05.21-.08.43-.08.65 0 1.66 1.34 3 3 3 .22 0 .44-.03.65-.08l1.55 1.55c-.67.33-1.41.53-2.2.53-2.76 0-5-2.24-5-5 0-.79.2-1.53.53-2.2zm4.31-.78l3.15 3.15.02-.16c0-1.66-1.34-3-3-3l-.17.01z\"/>\r\n        </svg>\r\n\r\n    );\r\n}\r\n\r\nexport default EyeClosedSVG;","function EyeOpenSVG(props){\r\n    return (\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" onClick={props.onClick}\r\n        style={{ backgroundColor: props.backgroundColor, fill: 'black', x: '0px', y: '0px', width: '18px', height: '18px'}}\r\n        viewBox=\"0 0 24 24\">\r\n            <path d=\"M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5zM12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z\"/>\r\n        </svg>\r\n\r\n    );\r\n}\r\n\r\nexport default EyeOpenSVG;","import EyeClosedSVG from '../SVG/EyeClosedSVG.js';\r\nimport EyeOpenSVG from '../SVG/EyeOpenSVG.js';\r\n\r\nfunction EyeSVGController(props){\r\n    if(!props.passwordVisible){\r\n        return(\r\n            <EyeClosedSVG backgroundColor='white' onClick={props.onClick} />\r\n        );\r\n    }\r\n    else{\r\n        return(\r\n            <EyeOpenSVG backgroundColor='white' onClick={props.onClick} />\r\n        );\r\n    }\r\n}\r\n\r\nexport default EyeSVGController;","import React from 'react';\r\nimport LockSVG from '../SVG/LockSVG.js';\r\nimport EyeSVGController from './EyeSVGController.js';\r\n\r\n\r\nclass FormPasswordField extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state= {\r\n            passwordVisible: false,\r\n        };\r\n        this.handleClick = this.handleClick.bind(this);\r\n    }\r\n\r\n    handleClick(event){\r\n        //console.log('clicked');\r\n        this.setState(\r\n            function(prevState){\r\n                return(\r\n                    { passwordVisible : (!prevState.passwordVisible) }\r\n                );\r\n            }\r\n        );\r\n    }\r\n\r\n    render(){\r\n\r\n        let passwordFieldInputType = this.state.passwordVisible ? 'text' : 'password';\r\n\r\n        return(\r\n            <div className='formInputElement' style={{display:'flex'}}>\r\n                <div style={{backgroundColor:'white', width:'40px', display:'flex', justifyContent:'center', alignItems:'center'}}>\r\n                    <LockSVG backgroundColor='white'/>\r\n                </div>\r\n\r\n                <input type={passwordFieldInputType} id='formPasswordInput' name='userPassword' placeholder='Password' value={this.props.value} onChange={this.props.onChange}>\r\n                </input>\r\n\r\n                <div style={{backgroundColor:'white', width:'40px', display:'flex', justifyContent:'center', alignItems:'center'}}>\r\n                    <EyeSVGController passwordVisible={this.state.passwordVisible} onClick={this.handleClick} />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default FormPasswordField;","import React from 'react';\r\n\r\nclass LoginFormSubmitButton extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n    render(){\r\n        return(\r\n            <button type='submit' id='loginFormSubmitButton' form='loginForm'>\r\n                Submit\r\n            </button>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default LoginFormSubmitButton;","import React from 'react';\r\n\r\nclass FormEmailErrorMessage extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n    render(){\r\n        if (this.props.inputError === 'empty'){\r\n            return(\r\n                <div className='formErrorMessageContainer'>\r\n                    <div>\r\n                        * enter email address\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else if (this.props.inputError === 'invalid' && this.props.formType === 'sign up form'){\r\n            return(\r\n                <div className='formErrorMessageContainer'>\r\n                    <div>\r\n                        * invalid email address\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else{\r\n            return null;\r\n        }\r\n    }\r\n}\r\n\r\nexport default FormEmailErrorMessage;","import React from 'react';\r\n\r\nclass FormPasswordErrorMessage extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n    render(){\r\n        if (this.props.inputError === 'empty'){\r\n            return(\r\n                <div className='formErrorMessageContainer'>\r\n                    <div>\r\n                        * enter password\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else if (this.props.inputError === 'invalid' && this.props.formType === 'sign up form'){\r\n            return(\r\n                <div className='formErrorMessageContainer'>\r\n                    <div>\r\n                        * password must be 8 to 64 characters and contain at least 1 digit and 1 letter\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else{\r\n            return null;\r\n        }\r\n    }\r\n}\r\n\r\nexport default FormPasswordErrorMessage;","import React from 'react';\r\n\r\nclass FormSubmitErrorMessage extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n    render(){\r\n        if (this.props.inputError === 'email already registered'){\r\n            return(\r\n                <div className='formErrorMessageContainer submitErrorMessageContainer'>\r\n                    <div>\r\n                        * email address is already registered\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else if (this.props.inputError === 'no database match'){\r\n            return(\r\n                <div className='formErrorMessageContainer submitErrorMessageContainer'>\r\n                    <div>\r\n                        * could not login with email and password combination\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else{\r\n            return null;\r\n        }\r\n    }\r\n}\r\n\r\nexport default FormSubmitErrorMessage;","let database = {\r\n    users : [\r\n        {username: 'Mike', email: 'mike@gmail.com', password: 'mikePa55word'},\r\n        {username: 'Molly', email: 'molly@gmail.com', password: 'mollyPa55word'}\r\n    ],\r\n}\r\n\r\n\r\nexport default database;","import database from '../database/database.js';\r\n\r\nlet inputValidation = {\r\n    //actually don't need stateValue here for validating email input, but will need it for checking valid login\r\n    checkIfEmailIsValidAndPrintError : function(userEmailInput/*, stateValue*/){\r\n        if(userEmailInput === ''){\r\n            return 'empty';\r\n        }\r\n        if(!/(?=^(.{1,64})[@](.{1,})[\\.]([^\\.]{1,})$)(?=^.{0,254}$)/.test(userEmailInput)){\r\n            return 'invalid';\r\n                // regex info:\r\n                // checks basic format of something@something.something (@ and . must be present, with any characters following and proceeding them)\r\n                // checks that it doesn't end with a period .\r\n                // checks that the local-part (the part before @) is at least 1 but no more than 64 characters\r\n                // checks that the entire e-mail address is no more than 254 characters\r\n        }\r\n        else{\r\n            return '';\r\n        }\r\n    },\r\n\r\n    //actually don't need stateValue here for validating username input, but will need it for checking valid login\r\n    checkIfUsernameIsValidAndPrintError : function(usernameInput/*, stateValue*/){\r\n        if(usernameInput === ''){\r\n            return 'empty';\r\n        }\r\n        if(!/^[A-Za-z0-9]{3,24}$/.test(usernameInput)){\r\n            return 'invalid';\r\n                // regex info:\r\n                // checks that the username is 3 to 24 characters with only letters and/or numbers (uppercase or lowercase)\r\n        }\r\n        else{\r\n            return '';\r\n        }\r\n    },\r\n\r\n    //actually don't need stateValue here for validating email input, but will need it for checking valid login\r\n    checkIfPasswordIsValidAndPrintError : function(userPasswordInput/*, stateValue*/){\r\n        if(userPasswordInput === ''){\r\n            return 'empty';\r\n        }\r\n        if(!/(?=^.{8,64}$)(?=.*\\d)(?=.*[A-Za-z])/.test(userPasswordInput)){\r\n            return 'invalid';\r\n                // regex info:\r\n                // checks that the password is 8 to 64 characters and has at least 1 digit, has at least one letter (uppercase or lowercase)\r\n        }\r\n        else{\r\n            return '';\r\n        }\r\n    },\r\n\r\n    validateInputUpdateErrorAndReturnIfValid : function(inputValue, inputField, formInstance){\r\n        let isInputValid = true;\r\n\r\n        if(inputField === 'userEmail'){\r\n            let inputError = inputValidation.checkIfEmailIsValidAndPrintError(inputValue);\r\n            formInstance.setState(\r\n                { \r\n                    userEmailInputError : inputError\r\n                }\r\n            );\r\n            if(inputError){\r\n                isInputValid = false;\r\n            }\r\n        }\r\n        else if(inputField === 'userPassword'){\r\n            let inputError = inputValidation.checkIfPasswordIsValidAndPrintError(inputValue);\r\n            formInstance.setState(\r\n                { \r\n                    userPasswordInputError : inputError\r\n                }\r\n            );\r\n            if(inputError){\r\n                isInputValid = false;\r\n            }\r\n        }\r\n        else if(inputField === 'username'){\r\n            let inputError = inputValidation.checkIfUsernameIsValidAndPrintError(inputValue);\r\n            formInstance.setState(\r\n                { \r\n                    usernameInputError : inputError\r\n                }\r\n            );\r\n            if(inputError){\r\n                isInputValid = false;\r\n            }\r\n        }\r\n\r\n        return isInputValid;\r\n    },\r\n\r\n    validateAllInputsUpdateErrorsAndReturnIfSubmitValid : function(formInstance){\r\n        let isSubmitValid = true;\r\n\r\n        if(formInstance.state.userEmail !== undefined){\r\n            if(!this.validateInputUpdateErrorAndReturnIfValid(formInstance.state.userEmail, 'userEmail', formInstance)){\r\n                isSubmitValid = false;\r\n            }\r\n        }\r\n\r\n        if(formInstance.state.userPassword !== undefined){\r\n            if(!this.validateInputUpdateErrorAndReturnIfValid(formInstance.state.userPassword, 'userPassword', formInstance)){\r\n                isSubmitValid = false;\r\n            }\r\n        }\r\n\r\n        if(formInstance.state.userPassword !== undefined){\r\n            if(!this.validateInputUpdateErrorAndReturnIfValid(formInstance.state.username, 'username', formInstance)){\r\n                isSubmitValid = false;\r\n            }\r\n        }\r\n\r\n        return isSubmitValid;\r\n    },\r\n\r\n    isSignUpEmailUnique : function(formInstance){\r\n        let isSignUpEmailUnique = true;\r\n\r\n        database.users.map(function(item){\r\n            if(item.email === formInstance.state.userEmail){\r\n                return isSignUpEmailUnique = false;\r\n            }\r\n        });\r\n\r\n        return isSignUpEmailUnique;\r\n    },\r\n\r\n    doLoginEmailAndPasswordMatchDatabase: function(formInstance){\r\n        let isThereMatchInDatabase = false;\r\n\r\n        database.users.map(function(item){\r\n            if(item.email === formInstance.state.userEmail &&\r\n            item.password === formInstance.state.userPassword){\r\n                return isThereMatchInDatabase = true;\r\n            }\r\n        });\r\n\r\n        return isThereMatchInDatabase;\r\n\r\n    },\r\n\r\n    checkEmailAndPasswordAgainstDatabaseUpdateSubmitErrorAndReturnIfMatch: function(formInstance){\r\n        let doEmailAndPasswordMatchDatabase = this.doLoginEmailAndPasswordMatchDatabase(formInstance);\r\n\r\n        console.log('doEmailAndPasswordMatchDatabase:', doEmailAndPasswordMatchDatabase);\r\n\r\n        if(!doEmailAndPasswordMatchDatabase){\r\n            if(formInstance.state.userEmail === '' || formInstance.state.userPassword === ''){\r\n                formInstance.setState(\r\n                    { submitError : 'empty field' }\r\n                );\r\n                return false;\r\n            }\r\n            else{\r\n                formInstance.setState(\r\n                    { submitError : 'no database match' }\r\n                );\r\n                return false;\r\n            }\r\n        }\r\n\r\n        formInstance.setState(\r\n            { submitError : '' }\r\n        );\r\n        return true;\r\n\r\n    },\r\n\r\n    checkEmailAgainstDatabaseUpdateSubmitErrorAndReturnIfUnique : function(formInstance){\r\n        let isEmailUnique = this.isSignUpEmailUnique(formInstance);\r\n        \r\n        if(!isEmailUnique){\r\n            formInstance.setState(\r\n                { submitError : 'email already registered' }\r\n            );\r\n            return false;\r\n        }\r\n\r\n        formInstance.setState(\r\n            { submitError : '' }\r\n        );\r\n        database.users.push(\r\n            {\r\n                username: formInstance.state.username, \r\n                email: formInstance.state.userEmail,\r\n                password: formInstance.state.userPassword\r\n            }\r\n        );\r\n\r\n        console.log('database:', database);\r\n        return true;\r\n\r\n    },\r\n\r\n    returnUsernameFromEmailAndPassword : function(email, password){\r\n\r\n        let username;\r\n        \r\n        database.users.map(function(item){\r\n            if(item.email === email &&\r\n            item.password === password){\r\n                 username = item.username;\r\n            }\r\n        });\r\n\r\n        return username;\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default inputValidation;\r\n","import React from 'react';\r\nimport FormEmailField from './FormEmailField';\r\nimport FormPasswordField from './FormPasswordField';\r\nimport LoginFormSubmitButton from './LoginFormSubmitButton';\r\nimport FormEmailErrorMessage from './FormEmailErrorMessage';\r\nimport FormPasswordErrorMessage from './FormPasswordErrorMessage';\r\nimport FormSubmitErrorMessage from './FormSubmitErrorMessage';\r\nimport inputValidation from './inputValidation.js';\r\n\r\n\r\nclass LoginForm extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            userEmail: '',\r\n            userPassword: '',\r\n            userEmailInputError: '',\r\n            userPasswordInputError: '',\r\n            submitError: '',\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n    handleChange(event){\r\n        let inputValue = event.target.value;\r\n        let inputField = event.target.name;\r\n\r\n        this.setState(\r\n            {\r\n                [inputField] : inputValue\r\n            },\r\n            function(){\r\n                inputValidation.validateInputUpdateErrorAndReturnIfValid(inputValue, inputField, this);\r\n            }\r\n        );\r\n    }\r\n    handleSubmit(event){\r\n        event.preventDefault();\r\n\r\n        let didSubmitSucceed = true;\r\n\r\n        if(!inputValidation.validateAllInputsUpdateErrorsAndReturnIfSubmitValid(this)){\r\n            console.log('login submit is invalid');\r\n            didSubmitSucceed = false;\r\n        }\r\n\r\n        if(!inputValidation.checkEmailAndPasswordAgainstDatabaseUpdateSubmitErrorAndReturnIfMatch(this)){\r\n            console.log('no email and password match in database; submit failed');\r\n            didSubmitSucceed = false;\r\n\r\n        };\r\n\r\n        if(!didSubmitSucceed){\r\n            this.props.setFormShakeState(false);\r\n            return null;\r\n        }\r\n\r\n        this.props.setFormShakeState(true);\r\n        let username = inputValidation.returnUsernameFromEmailAndPassword(this.state.userEmail, this.state.userPassword);\r\n        this.props.logIn(username);\r\n        console.log('login submit is valid');\r\n    }\r\n\r\n\r\n    render(){\r\n        return(\r\n            <form id='loginForm' className={this.props.showHide} method='POST' action='' onSubmit={this.handleSubmit}>\r\n                <FormEmailField \r\n                    onChange={this.handleChange} value={this.state.userEmail} \r\n                />\r\n                <FormEmailErrorMessage \r\n                    inputError={this.state.userEmailInputError} formType='login form' \r\n                />\r\n                <FormPasswordField \r\n                    onChange={this.handleChange} value={this.state.userPassword} \r\n                />\r\n                <FormPasswordErrorMessage \r\n                    inputError={this.state.userPasswordInputError} formType='login form' \r\n                />\r\n                <LoginFormSubmitButton />\r\n                <FormSubmitErrorMessage \r\n                    inputError={this.state.submitError}\r\n                />\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default LoginForm;","function UsernameSVG(props){\r\n    return (\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" \r\n        style={{ backgroundColor: props.backgroundColor, fill: 'black', x: '0px', y: '0px', width: '20px', height: '20px'}}\r\n        viewBox=\"0 0 24 24\">\r\n            <path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\"/>\r\n        </svg>\r\n\r\n    );\r\n}\r\n\r\nexport default UsernameSVG;","import React from 'react';\r\nimport UsernameSVG from '../SVG/UsernameSVG.js';\r\n\r\n\r\nclass FormUsernameField extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n    render(){\r\n        return(\r\n            <div className='formInputElement' style={{display:'flex'}}>\r\n                <div style={{backgroundColor:'white', width:'40px', display:'flex', justifyContent:'center', alignItems:'center'}}>\r\n                    <UsernameSVG backgroundColor='white'/>\r\n                </div>\r\n\r\n                <input type='text' id='formUsernameInput' name='username' placeholder='Username' value={this.props.value} onChange={this.props.onChange}>\r\n                </input>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FormUsernameField;","import React from 'react';\r\n\r\nclass SignUpFormSubmitButton extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n    render(){\r\n        return(\r\n            <button type='submit' id='signUpFormSubmitButton' form='signUpForm'>\r\n                Submit\r\n            </button>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default SignUpFormSubmitButton;","import React from 'react';\r\n\r\nclass FormUsernameErrorMessage extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n    render(){\r\n        if (this.props.inputError === 'empty'){\r\n            return(\r\n                <div className='formErrorMessageContainer'>\r\n                    <div>\r\n                        * enter username\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else if (this.props.inputError === 'invalid'){\r\n            return(\r\n                <div className='formErrorMessageContainer'>\r\n                    <div>\r\n                        * username must be 3 to 24 characters and contain only letters and/or numbers\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else{\r\n            return null;\r\n        }\r\n    }\r\n}\r\n\r\nexport default FormUsernameErrorMessage;","import React from 'react';\r\nimport FormUsernameField from './FormUsernameField';\r\nimport FormEmailField from './FormEmailField';\r\nimport FormPasswordField from './FormPasswordField';\r\nimport SignUpFormSubmitButton from './SignUpFormSubmitButton';\r\nimport FormUsernameErrorMessage from './FormUsernameErrorMessage';\r\nimport FormEmailErrorMessage from './FormEmailErrorMessage';\r\nimport FormPasswordErrorMessage from './FormPasswordErrorMessage';\r\nimport FormSubmitErrorMessage from './FormSubmitErrorMessage';\r\nimport inputValidation from './inputValidation';\r\n\r\n\r\nclass SignUpForm extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            username: '',\r\n            userEmail: '',\r\n            userPassword: '',\r\n            usernameInputError: '',\r\n            userEmailInputError: '',\r\n            userPasswordInputError: '',\r\n            submitError: '',\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleChange(event){\r\n        let inputValue = event.target.value;\r\n        let inputField = event.target.name;\r\n\r\n        this.setState(\r\n            {\r\n                [inputField] : inputValue\r\n            },\r\n            function(){\r\n                inputValidation.validateInputUpdateErrorAndReturnIfValid(inputValue, inputField, this);\r\n            }\r\n        );\r\n    }\r\n\r\n    handleSubmit(event){\r\n        event.preventDefault();\r\n\r\n        let didSubmitSucceed = true;\r\n\r\n        if(!inputValidation.validateAllInputsUpdateErrorsAndReturnIfSubmitValid(this)){\r\n            console.log('sign up submit is invalid');\r\n            didSubmitSucceed = false;\r\n            this.props.setFormShakeState(didSubmitSucceed);\r\n            return null;\r\n        }\r\n        \r\n        if(!inputValidation.checkEmailAgainstDatabaseUpdateSubmitErrorAndReturnIfUnique(this)){\r\n            console.log('sign up email is not unique; submit failed');\r\n            didSubmitSucceed = false;\r\n            this.props.setFormShakeState(didSubmitSucceed);\r\n            return null;\r\n        };\r\n\r\n        this.props.setFormShakeState(didSubmitSucceed);\r\n        this.props.logIn(this.state.username);\r\n        console.log('sign up email is unique; submit succeeded');\r\n         \r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <form id='signUpForm'  className={this.props.showHide} method='POST' action='' onSubmit={this.handleSubmit}>\r\n                <FormUsernameField \r\n                    onChange={this.handleChange} value={this.state.username} \r\n                />\r\n                <FormUsernameErrorMessage \r\n                    inputError={this.state.usernameInputError}\r\n                />\r\n                <FormEmailField \r\n                    onChange={this.handleChange} value={this.state.userEmail} \r\n                />\r\n                <FormEmailErrorMessage \r\n                    inputError={this.state.userEmailInputError} formType='sign up form'\r\n                />\r\n                <FormPasswordField \r\n                    onChange={this.handleChange} value={this.state.userPassword} \r\n                />\r\n                <FormPasswordErrorMessage \r\n                    inputError={this.state.userPasswordInputError} formType='sign up form'\r\n                />\r\n                <SignUpFormSubmitButton />\r\n                <FormSubmitErrorMessage \r\n                    inputError={this.state.submitError}\r\n                />\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default SignUpForm;","function LoginFormSelectButton(props){\r\n    return(\r\n        <div id='loginFormSelectButton'\r\n        className='formSelectButton'\r\n        data-is-form-selected={props.isFormSelected}\r\n        onClick={props.onClick}>\r\n            <div>\r\n                Login\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LoginFormSelectButton;","function SignUpFormSelectButton(props){\r\n    return(\r\n        <div id='signUpFormSelectButton'\r\n        className='formSelectButton'\r\n        data-is-form-selected={props.isFormSelected}\r\n        onClick={props.onClick}>\r\n            <div>\r\n                Sign Up\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SignUpFormSelectButton;","import React from 'react';\r\nimport LoginForm from './LoginForm';\r\nimport SignUpForm from './SignUpForm';\r\nimport LoginFormSelectButton from './LoginFormSelectButton.js';\r\nimport SignUpFormSelectButton from './SignUpFormSelectButton';\r\n\r\nclass FormBody extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state= {\r\n            formName: 'login form',\r\n            formShake: false,\r\n        }\r\n        this.handleFormSelectButtonClick = this.handleFormSelectButtonClick.bind(this);\r\n        this.setFormShakeState = this.setFormShakeState.bind(this);\r\n    }\r\n    handleFormSelectButtonClick(event){\r\n        if(event.currentTarget.id === 'loginFormSelectButton'){\r\n            this.setState(\r\n                { formName : 'login form' }\r\n            );\r\n        }\r\n        else{\r\n            this.setState(\r\n                { formName : 'sign up form' }\r\n            );\r\n        }\r\n    }\r\n    setFormShakeState(didSubmitSucceed){\r\n        if(didSubmitSucceed){\r\n            this.setState(\r\n                { formShake : false }\r\n            );\r\n        }\r\n        else{\r\n\r\n            // Setting state formShake to true sets the formBody div's data-shake attribute to 'true', and in the CSS the [data-shake='true'] selector is set to do one shake animation (it would be great if I could set this to an on-click action, but there is no on-click selector for CSS), so when the formShake is set to true the formBody div does one shake animation. However, unless formShake (and by extension the data-shake attribute) is reset to false, setting it to true again will not cause the shake. In other words, the formBody will shake the first time you do an invalid submit, but it will stay static after that unless formShake is reset to false. Thus, while sloppy, I need to first reset the formShake state to false, and immediately afterward I need to set formShake state to true (using a setTimeout function that fires asynchronously in 0 milliseconds) for the shake.\r\n            this.setState(\r\n                { formShake : false }\r\n            );\r\n\r\n            setTimeout(\r\n                () => {\r\n                    this.setState(\r\n                        { formShake : true }\r\n                    );\r\n                },\r\n                0\r\n            );\r\n\r\n        }\r\n    }\r\n    render(){\r\n\r\n        return(\r\n            <div id='formBody' data-shake={this.state.formShake}>\r\n                <LoginFormSelectButton \r\n                    onClick={this.handleFormSelectButtonClick} \r\n                    isFormSelected={ (this.state.formName==='login form') ? true : false }\r\n                />\r\n                <SignUpFormSelectButton \r\n                    onClick= {this.handleFormSelectButtonClick}\r\n                    isFormSelected={ (this.state.formName==='sign up form') ? true : false }\r\n                />\r\n                <LoginForm \r\n                    showHide={ (this.state.formName==='login form') ? 'show' : 'hide' }\r\n                    setFormShakeState={this.setFormShakeState}\r\n                    logIn={this.props.logIn}\r\n                />\r\n                <SignUpForm \r\n                    showHide={ (this.state.formName==='sign up form') ? 'show' : 'hide' }\r\n                    setFormShakeState={this.setFormShakeState}\r\n                    logIn={this.props.logIn}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FormBody;","import React from 'react';\r\nimport FormBody from './forms/FormBody.js';\r\n\r\nclass Body extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n    render(){\r\n\r\n        let formBody = \r\n            <FormBody \r\n                logIn={this.props.logIn}\r\n            />;\r\n\r\n        return(\r\n            <div id='bodyContainer'>\r\n                { (!this.props.loggedIn) ? formBody : null }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Body;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Header from './Header.js';\nimport Body from './Body.js';\nimport reportWebVitals from './reportWebVitals';\n\nclass App extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      loggedIn : false,\n      username : '',\n    };\n    this.logIn = this.logIn.bind(this);\n    this.logOut = this.logOut.bind(this);\n  }\n\n  logIn(username){\n    this.setState(\n      { loggedIn : true, username : username }\n    );\n  }\n\n  logOut(){\n    this.setState(\n      { loggedIn : false, username : '' }\n    );\n  }\n\n  render(){\n    return(\n      <div id='pageContainer'>\n        <Header loggedIn={this.state.loggedIn} username={this.state.username} logOut={this.logOut} />\n        <Body loggedIn={this.state.loggedIn} username={this.state.username} logIn={this.logIn} />\n      </div>\n    );\n  }\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}